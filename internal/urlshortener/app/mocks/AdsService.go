// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	ads "goads/internal/urlshortener/entities/ads"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// AdsService is an autogenerated mock type for the AdsService type
type AdsService struct {
	mock.Mock
}

// GetOnlyPublished provides a mock function with given fields: ctx, ids
func (_m *AdsService) GetOnlyPublished(ctx context.Context, ids []int64) ([]ads.Ad, error) {
	ret := _m.Called(ctx, ids)

	var r0 []ads.Ad
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, []int64) ([]ads.Ad, error)); ok {
		return rf(ctx, ids)
	}
	if rf, ok := ret.Get(0).(func(context.Context, []int64) []ads.Ad); ok {
		r0 = rf(ctx, ids)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]ads.Ad)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, []int64) error); ok {
		r1 = rf(ctx, ids)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAdsService interface {
	mock.TestingT
	Cleanup(func())
}

// NewAdsService creates a new instance of AdsService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAdsService(t mockConstructorTestingTNewAdsService) *AdsService {
	mock := &AdsService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
